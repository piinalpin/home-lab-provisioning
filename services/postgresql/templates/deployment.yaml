apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: "{{ .Release.Name }}-config"
            - secretRef:
                name: "{{ .Release.Name }}-secret"
          volumeMounts:
            - name: "{{ .Release.Name }}-storage"
              mountPath: /var/lib/postgresql/data
          livenessProbe:
            {{- toYaml $.Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml $.Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml $.Values.resources | nindent 12 }}
      volumes:
        - name: "{{ .Release.Name }}-storage"
          persistentVolumeClaim:
            claimName: "{{ .Release.Name }}-claim"