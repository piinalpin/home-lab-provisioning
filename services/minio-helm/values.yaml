replicas: 1

image:
  repository: quay.io/minio/minio
  tag: "5.2.0"
  pullPolicy: IfNotPresent
mcImage:
  repository: quay.io/minio/mc
  tag: "5.2.0"
  pullPolicy: IfNotPresent

podLabels:
  app: minio

minioAPIPort: "9000"
minioConsolePort: "9001"
existingSecret: minio-secret
certsPath: "/etc/minio/certs/"
configPathmc: "/etc/minio/mc/"
mountPath: "/data"

tls:
  enabled: true
  certSecret: ca.crt
  publicCrt: tls.crt
  privateKey: tls.key
trustedCertsSecret: minio-piinalpin-lab-cert

persistence:
  enabled: true
  annotations: {}
  existingClaim: minio-storage-claim
  storageClass: rook-ceph-block
  volumeName: minio-storage
  accessMode: ReadWriteOnce
  size: 8Gi
  subPath: ""

service:
  type: ClusterIP
  port: "9000"
  annotations:
    konghq.com/protocol: https
    ingress.kubernetes.io/service-upstream: "true"
    konghq.com/host-header: s3.minio.piinalpin.lab

ingress:
  enabled: false
  ingressClassName: kong
  labels:
    app: minio
    # node-role.kubernetes.io/ingress: platform
  annotations:
    konghq.com/strip-path: "true"
    konghq.com/protocols: https
    konghq.com/preserve-host: "true"
  path: /
  pathType: Prefix
  hosts:
    - s3.minio.piinalpin.lab
  tls:
   - secretName: minio-piinalpin-lab-cert
     hosts:
       - s3.minio.piinalpin.lab

consoleService:
  type: ClusterIP
  port: "9001"
  annotations:
    konghq.com/protocol: https
    ingress.kubernetes.io/service-upstream: "true"
    konghq.com/host-header: minio.piinalpin.lab

consoleIngress:
  enabled: true
  ingressClassName: kong
  labels:
    app: minio
  annotations:
    konghq.com/strip-path: "true"
    konghq.com/protocols: https
    konghq.com/preserve-host: "true"
  path: /
  pathType: Prefix
  hosts:
    - minio.piinalpin.lab
  tls:
   - secretName: minio-piinalpin-lab-cert
     hosts:
       - minio.piinalpin.lab

users:
  - accessKey: console
    secretKey: N0x7U3lWJJKh
    policy: readwrite

environment:
  MINIO_BROWSER_LOGIN_ANIMATION: "off"