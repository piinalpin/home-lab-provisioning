fullnameOverride: prometheus

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserverAvailability: true
    kubeApiserverBurnrate: true
    kubeApiserverHistogram: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: true
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true

prometheus:
  enabled: true
  ingress:
    enabled: true
    annotations:
      konghq.com/strip-path: "true"
      konghq.com/protocols: https
      konghq.com/preserve-host: "true"
    ingressClassName: kong
    labels:
      app: prometheus
    hosts:
      - prometheus.piinalpin.lab
    paths:
      - /
    pathType: Prefix
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.piinalpin.lab
  prometheusSpec:
    volumeClaimTemplate:
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 15Gi
        storageClassName: "rook-ceph-block"
    securityContext:
      fsGroup: 2000
      runAsGroup: 2000
      runAsNonRoot: true
      runAsUser: 1000
      seccompProfile:
        type: RuntimeDefault
    additionalScrapeConfigs: 
      - job_name: blackbox
        metrics_path: /probe
        params:
          module: [http_2xx]
        static_configs:
          - targets:
            - http://dexter.default.svc.cluster.local/actuator/health
            - http://enclave.default.svc.cluster.local/actuator/health
            - http://valkyrie.default.svc.cluster.local/actuator/health
        relabel_configs:
          - source_labels: [__address__]
            target_label: __param_target
          - source_labels: [__param_target]
            target_label: instance
          - target_label: __address__
            replacement: blackbox-exporter-prometheus-blackbox-exporter:9115
  additionalServiceMonitors:
    - name: demo-app-backend-servicemonitor
      selector:
        matchLabels:
          app: demo-app-backend
      namespaceSelector:
        matchNames:
          - default
      endpoints:
        - port: http
          path: /actuator/prometheus
          interval: 10s
          relabelings:
            - sourceLabels: [__meta_kubernetes_service_label_app]
              targetLabel: application
              replacement: "$1"
              action: replace
            - sourceLabels: [__meta_kubernetes_endpoint_address_target_name]
              targetLabel: instance
              replacement: "$1"
              action: replace

grafana:
  assertNoLeakedSecrets: false
  enabled: true
  adminPassword: 7Z6e2BgOLWLX
  image:
    tag: 11.1.0
  fullnameOverride: grafana
  defaultDashboardsTimezone: Asia/Jakarta
  ingress:
    enabled: true
    annotations:
      konghq.com/strip-path: "true"
      konghq.com/protocols: https
      konghq.com/preserve-host: "true"
    ingressClassName: kong
    labels:
      app: grafana
    hosts:
      - grafana.piinalpin.lab
    path: /
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.piinalpin.lab
  service:
    annotations:
      konghq.com/protocol: https
      ingress.kubernetes.io/service-upstream: "true"
    labels:
      app: grafana
    port: 3000
    targetPort: 3000
  serviceMonitor:
    enabled: true
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3000
      scheme: HTTPS
  livenessProbe:
    httpGet:
      path: /api/health
      port: 3000
      scheme: HTTPS
    initialDelaySeconds: 60
    timeoutSeconds: 30
    failureThreshold: 10
  persistence:
    enabled: true
    accessModes:
      - ReadWriteOnce
    size: 10Gi
    storageClassName: "rook-ceph-block"
  additionalDataSources:
    - name: Loki
      access: proxy
      type: loki
      url: http://loki:3100
      version: 1
      editable: true
      jsonData: 
        tlsSkipVerify: true
        maxLines: 1000
        derivedFields:
          - datasourceUid: "Tempo"
            matcherRegex: "trace_id=(\\w+)"
            name: trace_id
            url: "$${__value.raw}"
            urlDisplayLabel: "View Trace"
    - name: Tempo
      access: proxy
      type: tempo
      url: http://tempo:3100
      version: 1
      editable: true
      jsonData: 
        tlsSkipVerify: true
        maxLines: 1000
  extraSecretMounts:
    - name: grafana-tls
      secretName: grafana-tls
      mountPath: /etc/grafana/certs
  grafana.ini:
    server:
      protocol: https
      http_port: 3000
      enforce_domain: False
      domain: grafana.piinalpin.lab
      root_url: https://grafana.piinalpin.lab:3000
      cert_file: /etc/grafana/certs/tls.crt
      cert_key: /etc/grafana/certs/tls.key
    smtp:
      assertNoLeakedSecrets: true
      enabled: true
      host: <SMPT_HOST>
      user: <USERNAME>
      password: '"""SECRET_KEY"""'
      startTLS: "NoStartTLS"
      from_address: <YOUR_EMAIL>

alertmanager:
  enabled: true
  fullnameOverride: alertmanager
  alertmanagerSpec:
    storage:
      volumeClaimTemplate:
        spec:
          accessModes: ["ReadWriteOnce"]
          resources:
            requests:
              storage: 100Mi
          storageClassName: "rook-ceph-block"

prometheus-node-exporter:
  fullnameOverride: prometheus-node-exporter

kube-state-metrics:
  fullnameOverride: kube-state-metrics