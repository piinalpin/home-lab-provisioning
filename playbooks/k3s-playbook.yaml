- name: Setup Kubernetes Environment
  hosts: all
  become: yes
  become_method: sudo
  gather_facts: yes
  tasks:

    - name: Remove generated ubuntu hosts
      lineinfile:
        path: /etc/hosts
        regexp: "ubuntu-*"
        state: absent
        backup: yes

    - name: Remove generated hosts
      lineinfile:
        path: /etc/hosts
        regexp: ".* {{ hostvars[item]['ansible_hostname']}} {{ hostvars[item]['ansible_hostname']}}"
        state: absent
        backup: yes
      with_items: "{{ ansible_play_batch }}"

    - name: Update hosts
      lineinfile:
        path: /etc/hosts
        regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
        line: "{{ hostvars[item]['ansible_ssh_host'] }}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}.local"
        state: present
        backup: yes
      with_items: "{{ ansible_play_batch }}"

    - name: Install packages that allow apt to be used over HTTPS
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: present
        update_cache: yes

    - name: Install containerd
      apt: 
        name:
          - containerd
        state: present
        update_cache: yes
      notify: Check containerd status

    - name: Reload systemd daemon
      command: systemctl daemon-reload

    - name: Enable and start containerd
      service:
        name: containerd
        state: restarted
        enabled: yes
    
    - name: Remove swapfile from /etc/fstab
      mount:
        name: "{{ item }}"
        fstype: swap
        state: absent
      with_items:
        - swap
        - none

    - name: Disable swap
      command: swapoff -a
      when: ansible_swaptotal_mb > 0

  handlers:
    - name: Check containerd status
      service:
        name: containerd
        state: started
        enabled: yes

- name: Master Node Setup
  hosts: master_nodes
  become: yes
  become_method: sudo
  gather_facts: yes
  vars:
    custom_resource_remote_src: /tmp/calico-custom-resource.yaml
  tasks:

    - name: Create k3s config directory
      command: "{{ item }}"
      with_items:
      - rm -rf /home/{{ ansible_user }}/.k3s
      - mkdir -p /home/{{ ansible_user }}/.k3s

    - name: Copy k3s cluster config
      template:
        src: k3s-config.yaml.j2
        dest: /home/{{ ansible_user }}/.k3s/cluster-config.yaml

    - name: Initialize kubernetes cluster
      shell: curl -sfL https://get.k3s.io | K3S_CONFIG_FILE=/home/{{ ansible_user }}/.k3s/cluster-config.yaml sh -s -

    - name: Setup kubeconfig for {{ ansible_user }} user
      command: "{{ item }}"
      with_items:
      - rm -rf /home/{{ ansible_user }}/.kube
      - mkdir -p /home/{{ ansible_user }}/.kube
      - cp -i /etc/rancher/k3s/k3s.yaml /home/{{ ansible_user }}/.kube/config
      - chown {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/.kube/config
    
    - name: Install calico pod network
      become: false
      command: kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/tigera-operator.yaml
      register: install_calico_pod_network

    - name: Copy calico custom resource
      template:
        src: calico-custom-resource.yaml.j2
        dest: "{{ custom_resource_remote_src }}"

    - name: Install custom resource pod network
      become: false
      command: kubectl create -f {{ custom_resource_remote_src }}
      register: install_calico_custom_resource
      when: install_calico_pod_network is succeeded
  
  handlers:
    - name: Check k3s.service status
      service:
        name: k3s.service
        state: started
        enabled: yes

- name: Worker Node Setup
  hosts: worker_nodes
  become: yes
  become_method: sudo
  gather_facts: yes
  tasks:
    
    - name: Join the node to cluster
      shell: curl -sfL https://get.k3s.io | K3S_TOKEN={{ k3s_token }} K3S_URL=https://{{ k3s_master_ip }}:6443 sh -s -
    
  handlers:
  - name: Check k3s-agent.service status
    service:
      name: k3s-agent.service
      state: started
      enabled: yes
